import {
  __commonJS
} from "./chunk-BUSYA2B4.js";

// node_modules/dat.gui.image/dist/dat.gui.image.js
var require_dat_gui_image = __commonJS({
  "node_modules/dat.gui.image/dist/dat.gui.image.js"(exports, module) {
    (function webpackUniversalModuleDefinition(root, factory) {
      if (typeof exports === "object" && typeof module === "object")
        module.exports = factory();
      else if (typeof define === "function" && define.amd)
        define([], factory);
      else if (typeof exports === "object")
        exports["dat.gui.image"] = factory();
      else
        root["dat.gui.image"] = factory();
    })(window, function() {
      return (
        /******/
        function(modules) {
          var installedModules = {};
          function __webpack_require__(moduleId) {
            if (installedModules[moduleId]) {
              return installedModules[moduleId].exports;
            }
            var module2 = installedModules[moduleId] = {
              /******/
              i: moduleId,
              /******/
              l: false,
              /******/
              exports: {}
              /******/
            };
            modules[moduleId].call(module2.exports, module2, module2.exports, __webpack_require__);
            module2.l = true;
            return module2.exports;
          }
          __webpack_require__.m = modules;
          __webpack_require__.c = installedModules;
          __webpack_require__.d = function(exports2, name, getter) {
            if (!__webpack_require__.o(exports2, name)) {
              Object.defineProperty(exports2, name, { enumerable: true, get: getter });
            }
          };
          __webpack_require__.r = function(exports2) {
            if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
              Object.defineProperty(exports2, Symbol.toStringTag, { value: "Module" });
            }
            Object.defineProperty(exports2, "__esModule", { value: true });
          };
          __webpack_require__.t = function(value, mode) {
            if (mode & 1) value = __webpack_require__(value);
            if (mode & 8) return value;
            if (mode & 4 && typeof value === "object" && value && value.__esModule) return value;
            var ns = /* @__PURE__ */ Object.create(null);
            __webpack_require__.r(ns);
            Object.defineProperty(ns, "default", { enumerable: true, value });
            if (mode & 2 && typeof value != "string") for (var key in value) __webpack_require__.d(ns, key, (function(key2) {
              return value[key2];
            }).bind(null, key));
            return ns;
          };
          __webpack_require__.n = function(module2) {
            var getter = module2 && module2.__esModule ? (
              /******/
              function getDefault() {
                return module2["default"];
              }
            ) : (
              /******/
              function getModuleExports() {
                return module2;
              }
            );
            __webpack_require__.d(getter, "a", getter);
            return getter;
          };
          __webpack_require__.o = function(object, property) {
            return Object.prototype.hasOwnProperty.call(object, property);
          };
          __webpack_require__.p = "";
          return __webpack_require__(__webpack_require__.s = 0);
        }([
          /* 0 */
          /***/
          function(module2, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__);
            var _style_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
            var _style_scss__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(_style_scss__WEBPACK_IMPORTED_MODULE_0__);
            function _typeof(obj) {
              "@babel/helpers - typeof";
              if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                _typeof = function _typeof2(obj2) {
                  return typeof obj2;
                };
              } else {
                _typeof = function _typeof2(obj2) {
                  return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                };
              }
              return _typeof(obj);
            }
            function _classCallCheck(instance, Constructor) {
              if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
              }
            }
            function _defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            function _createClass(Constructor, protoProps, staticProps) {
              if (protoProps) _defineProperties(Constructor.prototype, protoProps);
              if (staticProps) _defineProperties(Constructor, staticProps);
              return Constructor;
            }
            function _get(target, property, receiver) {
              if (typeof Reflect !== "undefined" && Reflect.get) {
                _get = Reflect.get;
              } else {
                _get = function _get2(target2, property2, receiver2) {
                  var base = _superPropBase(target2, property2);
                  if (!base) return;
                  var desc = Object.getOwnPropertyDescriptor(base, property2);
                  if (desc.get) {
                    return desc.get.call(receiver2);
                  }
                  return desc.value;
                };
              }
              return _get(target, property, receiver || target);
            }
            function _superPropBase(object, property) {
              while (!Object.prototype.hasOwnProperty.call(object, property)) {
                object = _getPrototypeOf(object);
                if (object === null) break;
              }
              return object;
            }
            function _createSuper(Derived) {
              return function() {
                var Super = _getPrototypeOf(Derived), result;
                if (_isNativeReflectConstruct()) {
                  var NewTarget = _getPrototypeOf(this).constructor;
                  result = Reflect.construct(Super, arguments, NewTarget);
                } else {
                  result = Super.apply(this, arguments);
                }
                return _possibleConstructorReturn(this, result);
              };
            }
            function _possibleConstructorReturn(self, call) {
              if (call && (_typeof(call) === "object" || typeof call === "function")) {
                return call;
              }
              return _assertThisInitialized(self);
            }
            function _assertThisInitialized(self) {
              if (self === void 0) {
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              }
              return self;
            }
            function _isNativeReflectConstruct() {
              if (typeof Reflect === "undefined" || !Reflect.construct) return false;
              if (Reflect.construct.sham) return false;
              if (typeof Proxy === "function") return true;
              try {
                Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                }));
                return true;
              } catch (e) {
                return false;
              }
            }
            function _getPrototypeOf(o) {
              _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
                return o2.__proto__ || Object.getPrototypeOf(o2);
              };
              return _getPrototypeOf(o);
            }
            function _inherits(subClass, superClass) {
              if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function");
              }
              subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
              if (superClass) _setPrototypeOf(subClass, superClass);
            }
            function _setPrototypeOf(o, p) {
              _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
                o2.__proto__ = p2;
                return o2;
              };
              return _setPrototypeOf(o, p);
            }
            __webpack_exports__["default"] = function(dat) {
              var dom = dat.dom.dom;
              var ImageController = function(_dat$controllers$Cont) {
                _inherits(ImageController2, _dat$controllers$Cont);
                var _super = _createSuper(ImageController2);
                function ImageController2(object, property) {
                  var _this;
                  _classCallCheck(this, ImageController2);
                  _this = _super.call(this, object, property);
                  _this.__onChangeFirstTime = true;
                  _this.__fileReader = new FileReader();
                  _this.__image = document.createElement("img");
                  _this.__imagePreview = document.createElement("img");
                  _this.__input = document.createElement("input");
                  _this.__image.src = object[property];
                  _this.__imagePreview.src = object[property];
                  _this.__input.type = "file";
                  dom.bind(_this.__image, "load", _this.handleImageLoaded.bind(_assertThisInitialized(_this)));
                  dom.bind(_this.__input, "change", _this.handleFileUpload.bind(_assertThisInitialized(_this)));
                  dom.bind(_this.__fileReader, "loadend", _this.handleFileLoaded.bind(_assertThisInitialized(_this)));
                  dom.addClass(_this.__imagePreview, "preview");
                  _this.domElement.appendChild(_this.__imagePreview);
                  _this.domElement.appendChild(_this.__input);
                  return _this;
                }
                _createClass(ImageController2, [{
                  key: "handleFileUpload",
                  value: function handleFileUpload() {
                    var file = this.__input.files[0];
                    if (!file) {
                      return;
                    }
                    this.__input.value = "";
                    this.__fileReader.readAsDataURL(file);
                  }
                }, {
                  key: "handleFileLoaded",
                  value: function handleFileLoaded() {
                    this.handleFilePath(this.__fileReader.result);
                  }
                }, {
                  key: "handleFilePath",
                  value: function handleFilePath(filePath) {
                    if (!filePath) {
                      return;
                    }
                    this.__image.src = filePath;
                  }
                }, {
                  key: "handleImageLoaded",
                  value: function handleImageLoaded() {
                    this.__imagePreview.src = this.__image.src;
                    if (this.__onChange) {
                      this.__onChange.call(this, this.__image, this.__onChangeFirstTime);
                      this.__onChangeFirstTime = false;
                    }
                  }
                }, {
                  key: "updateDisplay",
                  value: function updateDisplay() {
                    if (this.isModified()) {
                      var newValue = this.getValue();
                      this.handleFilePath(newValue);
                      this.initialValue = newValue;
                    }
                    return _get(_getPrototypeOf(ImageController2.prototype), "updateDisplay", this).call(this);
                  }
                }]);
                return ImageController2;
              }(dat.controllers.Controller);
              dat.GUI.prototype.addImage = function(object, property) {
                if (object[property] === void 0) {
                  throw new Error('Object "' + object + '" has no property "' + property + '"');
                }
                var controller = new ImageController(object, property);
                dom.addClass(controller.domElement, "c");
                var name = document.createElement("span");
                dom.addClass(name, "property-name");
                name.innerHTML = controller.property;
                var container = document.createElement("div");
                container.appendChild(name);
                container.appendChild(controller.domElement);
                var li = document.createElement("li");
                if (container) {
                  li.appendChild(container);
                }
                this.__ul.appendChild(li);
                this.onResize();
                dom.addClass(li, dat.GUI.CLASS_CONTROLLER_ROW);
                dom.addClass(li, "image");
                controller.__li = li;
                controller.__gui = this;
                controller.name = function(name2) {
                  this.__li.firstElementChild.firstElementChild.innerHTML = name2;
                  return this;
                };
                controller.listen = function() {
                  this.__gui.listen(this);
                  return this;
                };
                controller.remove = function() {
                  this.__gui.remove(this);
                  return this;
                };
                this.__controllers.push(controller);
                return controller;
              };
            };
          },
          /* 1 */
          /***/
          function(module2, exports2, __webpack_require__) {
            var api = __webpack_require__(2);
            var content = __webpack_require__(3);
            content = content.__esModule ? content.default : content;
            if (typeof content === "string") {
              content = [[module2.i, content, ""]];
            }
            var options = {};
            options.insert = "head";
            options.singleton = false;
            var update = api(content, options);
            var exported = content.locals ? content.locals : {};
            module2.exports = exported;
          },
          /* 2 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            var isOldIE = /* @__PURE__ */ function isOldIE2() {
              var memo;
              return function memorize() {
                if (typeof memo === "undefined") {
                  memo = Boolean(window && document && document.all && !window.atob);
                }
                return memo;
              };
            }();
            var getTarget = /* @__PURE__ */ function getTarget2() {
              var memo = {};
              return function memorize(target) {
                if (typeof memo[target] === "undefined") {
                  var styleTarget = document.querySelector(target);
                  if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
                    try {
                      styleTarget = styleTarget.contentDocument.head;
                    } catch (e) {
                      styleTarget = null;
                    }
                  }
                  memo[target] = styleTarget;
                }
                return memo[target];
              };
            }();
            var stylesInDom = [];
            function getIndexByIdentifier(identifier) {
              var result = -1;
              for (var i = 0; i < stylesInDom.length; i++) {
                if (stylesInDom[i].identifier === identifier) {
                  result = i;
                  break;
                }
              }
              return result;
            }
            function modulesToDom(list, options) {
              var idCountMap = {};
              var identifiers = [];
              for (var i = 0; i < list.length; i++) {
                var item = list[i];
                var id = options.base ? item[0] + options.base : item[0];
                var count = idCountMap[id] || 0;
                var identifier = "".concat(id, " ").concat(count);
                idCountMap[id] = count + 1;
                var index = getIndexByIdentifier(identifier);
                var obj = {
                  css: item[1],
                  media: item[2],
                  sourceMap: item[3]
                };
                if (index !== -1) {
                  stylesInDom[index].references++;
                  stylesInDom[index].updater(obj);
                } else {
                  stylesInDom.push({
                    identifier,
                    updater: addStyle(obj, options),
                    references: 1
                  });
                }
                identifiers.push(identifier);
              }
              return identifiers;
            }
            function insertStyleElement(options) {
              var style = document.createElement("style");
              var attributes = options.attributes || {};
              if (typeof attributes.nonce === "undefined") {
                var nonce = true ? __webpack_require__.nc : void 0;
                if (nonce) {
                  attributes.nonce = nonce;
                }
              }
              Object.keys(attributes).forEach(function(key) {
                style.setAttribute(key, attributes[key]);
              });
              if (typeof options.insert === "function") {
                options.insert(style);
              } else {
                var target = getTarget(options.insert || "head");
                if (!target) {
                  throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
                }
                target.appendChild(style);
              }
              return style;
            }
            function removeStyleElement(style) {
              if (style.parentNode === null) {
                return false;
              }
              style.parentNode.removeChild(style);
            }
            var replaceText = /* @__PURE__ */ function replaceText2() {
              var textStore = [];
              return function replace(index, replacement) {
                textStore[index] = replacement;
                return textStore.filter(Boolean).join("\n");
              };
            }();
            function applyToSingletonTag(style, index, remove, obj) {
              var css = remove ? "" : obj.media ? "@media ".concat(obj.media, " {").concat(obj.css, "}") : obj.css;
              if (style.styleSheet) {
                style.styleSheet.cssText = replaceText(index, css);
              } else {
                var cssNode = document.createTextNode(css);
                var childNodes = style.childNodes;
                if (childNodes[index]) {
                  style.removeChild(childNodes[index]);
                }
                if (childNodes.length) {
                  style.insertBefore(cssNode, childNodes[index]);
                } else {
                  style.appendChild(cssNode);
                }
              }
            }
            function applyToTag(style, options, obj) {
              var css = obj.css;
              var media = obj.media;
              var sourceMap = obj.sourceMap;
              if (media) {
                style.setAttribute("media", media);
              } else {
                style.removeAttribute("media");
              }
              if (sourceMap && btoa) {
                css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
              }
              if (style.styleSheet) {
                style.styleSheet.cssText = css;
              } else {
                while (style.firstChild) {
                  style.removeChild(style.firstChild);
                }
                style.appendChild(document.createTextNode(css));
              }
            }
            var singleton = null;
            var singletonCounter = 0;
            function addStyle(obj, options) {
              var style;
              var update;
              var remove;
              if (options.singleton) {
                var styleIndex = singletonCounter++;
                style = singleton || (singleton = insertStyleElement(options));
                update = applyToSingletonTag.bind(null, style, styleIndex, false);
                remove = applyToSingletonTag.bind(null, style, styleIndex, true);
              } else {
                style = insertStyleElement(options);
                update = applyToTag.bind(null, style, options);
                remove = function remove2() {
                  removeStyleElement(style);
                };
              }
              update(obj);
              return function updateStyle(newObj) {
                if (newObj) {
                  if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
                    return;
                  }
                  update(obj = newObj);
                } else {
                  remove();
                }
              };
            }
            module2.exports = function(list, options) {
              options = options || {};
              if (!options.singleton && typeof options.singleton !== "boolean") {
                options.singleton = isOldIE();
              }
              list = list || [];
              var lastIdentifiers = modulesToDom(list, options);
              return function update(newList) {
                newList = newList || [];
                if (Object.prototype.toString.call(newList) !== "[object Array]") {
                  return;
                }
                for (var i = 0; i < lastIdentifiers.length; i++) {
                  var identifier = lastIdentifiers[i];
                  var index = getIndexByIdentifier(identifier);
                  stylesInDom[index].references--;
                }
                var newLastIdentifiers = modulesToDom(newList, options);
                for (var _i = 0; _i < lastIdentifiers.length; _i++) {
                  var _identifier = lastIdentifiers[_i];
                  var _index = getIndexByIdentifier(_identifier);
                  if (stylesInDom[_index].references === 0) {
                    stylesInDom[_index].updater();
                    stylesInDom.splice(_index, 1);
                  }
                }
                lastIdentifiers = newLastIdentifiers;
              };
            };
          },
          /* 3 */
          /***/
          function(module2, exports2, __webpack_require__) {
            var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(4);
            exports2 = ___CSS_LOADER_API_IMPORT___(false);
            exports2.push([module2.i, ".dg .cr.image{position:relative;height:auto;border-left:3px solid #2fa1d6}.dg .cr.image .preview{display:block;width:calc(100% + 5px);padding:4px 0;margin-left:-5px}.dg .cr.image input{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;cursor:pointer}\n", ""]);
            module2.exports = exports2;
          },
          /* 4 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            module2.exports = function(useSourceMap) {
              var list = [];
              list.toString = function toString() {
                return this.map(function(item) {
                  var content = cssWithMappingToString(item, useSourceMap);
                  if (item[2]) {
                    return "@media ".concat(item[2], " {").concat(content, "}");
                  }
                  return content;
                }).join("");
              };
              list.i = function(modules, mediaQuery, dedupe) {
                if (typeof modules === "string") {
                  modules = [[null, modules, ""]];
                }
                var alreadyImportedModules = {};
                if (dedupe) {
                  for (var i = 0; i < this.length; i++) {
                    var id = this[i][0];
                    if (id != null) {
                      alreadyImportedModules[id] = true;
                    }
                  }
                }
                for (var _i = 0; _i < modules.length; _i++) {
                  var item = [].concat(modules[_i]);
                  if (dedupe && alreadyImportedModules[item[0]]) {
                    continue;
                  }
                  if (mediaQuery) {
                    if (!item[2]) {
                      item[2] = mediaQuery;
                    } else {
                      item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
                    }
                  }
                  list.push(item);
                }
              };
              return list;
            };
            function cssWithMappingToString(item, useSourceMap) {
              var content = item[1] || "";
              var cssMapping = item[3];
              if (!cssMapping) {
                return content;
              }
              if (useSourceMap && typeof btoa === "function") {
                var sourceMapping = toComment(cssMapping);
                var sourceURLs = cssMapping.sources.map(function(source) {
                  return "/*# sourceURL=".concat(cssMapping.sourceRoot || "").concat(source, " */");
                });
                return [content].concat(sourceURLs).concat([sourceMapping]).join("\n");
              }
              return [content].join("\n");
            }
            function toComment(sourceMap) {
              var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
              var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
              return "/*# ".concat(data, " */");
            }
          }
          /******/
        ])
      );
    });
  }
});
export default require_dat_gui_image();
//# sourceMappingURL=dat__gui__image.js.map
