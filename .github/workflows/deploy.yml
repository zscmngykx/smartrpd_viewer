name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm install

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm install

      - name: Run unit tests
        run: |
          echo "Running frontend tests..."
          npm run test
      - name: Install Newman for Postman testing
        run: |
          echo "Installing newman..."
          npm install -g newman

      - name: Run Postman integration tests
        run: |
          echo "Running Postman tests with newman..."
          newman run postman/smartrpd.postman_collection.json \
                     -e postman/smartrpd-env.postman_environment.json \
                     --reporters cli
  
  security_scan:
    runs-on: ubuntu-latest
    needs: test

    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      

  deploy:
    runs-on: ubuntu-latest
    needs: security_scan

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm install

      - name: Fix webpack permissions
        run: |
          echo "Fixing webpack executable permissions..."
          chmod +x node_modules/.bin/webpack || true

      - name: Build ThreeDViewer.bundle.js
        run: |
          echo "Running build..."
          npm run build
          echo "Output in dist/:"
          ls -lh dist/
          echo "Contents of src/pages:"
          ls -lh src/pages || true
          echo "Contents of css:"
          ls -lh css || true
          echo "Contents of assets:"
          ls -lh assets || true
          echo "Root-level JS in src:"
          ls -lh src/*.js || true

      - name: Clean remote deployment directory
        run: |
          echo "Cleaning old deployment and setting permissions..."
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
            sudo rm -rf /var/www/html/* &&
            sudo mkdir -p /var/www/html &&
            sudo chown -R $USER:$USER /var/www/html
          '

      - name: Upload static assets to EC2 (using scp)
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem

          echo "Uploading index.html"
          scp -i private_key.pem -o StrictHostKeyChecking=no index.html ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/html/

          echo "Uploading css/"
          scp -i private_key.pem -o StrictHostKeyChecking=no -r css ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/html/

          echo "Uploading assets/"
          scp -i private_key.pem -o StrictHostKeyChecking=no -r assets ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/html/

          echo "Creating dist/ on EC2"
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} 'mkdir -p /var/www/html/dist'

          echo "Uploading bundle.js"
          scp -i private_key.pem -o StrictHostKeyChecking=no dist/bundle.js ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/html/dist/

          echo "Uploading src/"
          scp -i private_key.pem -o StrictHostKeyChecking=no -r src ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/html/

      - name: Show deployment result on EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          echo "Directory structure at /var/www/html/:"
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} 'ls -R /var/www/html/'

      - name: Show access links
        run: |
          echo 'Deployment complete. Access links:'
          echo 'ðŸ”— http://${{ secrets.EC2_HOST }}/index.html'
          echo 'ðŸ”— http://${{ secrets.EC2_HOST }}/src/pages/case_list.html'
          echo 'ðŸ”— http://${{ secrets.EC2_HOST }}/src/pages/ThreeDViewer.html'
        if: success()

      - name: Deployment failure notice
        run: echo 'Build failed. Please check logs.'
        if: failure()
