name: Frontend CI/CD to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 拉取代码
        uses: actions/checkout@v3

      - name: 📦 安装依赖
        run: |
          echo "📦 安装依赖..."
          npm install

      - name: 🔓 修复 webpack 执行权限
        run: |
          echo "🔓 修复 webpack 执行权限..."
          chmod +x node_modules/.bin/webpack || true

      - name: 🛠️ 构建 ThreeDViewer.bundle.js
        run: |
          echo "🛠️ 执行 npm run build..."
          npm run build
          echo "📂 构建输出内容："
          ls -lh dist/
          echo "📂 src/pages 内容："
          ls -lh src/pages || true
          echo "📂 css 内容："
          ls -lh css || true
          echo "📂 assets 内容："
          ls -lh assets || true
          echo "📂 src 根目录文件："
          ls -lh src/*.js || true

      - name: 🧹 清理远程部署目录
        run: |
          echo "🧹 清理旧部署目录并赋权..."
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
            sudo rm -rf /var/www/html/* &&
            sudo mkdir -p /var/www/html &&
            sudo chown -R $USER:$USER /var/www/html
          '

      - name: 📤 使用原生 scp 上传所有静态资源（彻底稳定）
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem

          echo "📦 上传 index.html"
          scp -i private_key.pem -o StrictHostKeyChecking=no index.html ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/html/

          echo "📦 上传 css/"
          scp -i private_key.pem -o StrictHostKeyChecking=no -r css ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/html/

          echo "📦 上传 assets/"
          scp -i private_key.pem -o StrictHostKeyChecking=no -r assets ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/html/

          echo "📦 上传 dist/bundle.js"
          # ✅ 先在 EC2 上创建 /dist 目录
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} 'mkdir -p /var/www/html/dist'

            # 📦 上传 bundle.js 到 /dist/
          scp -i private_key.pem -o StrictHostKeyChecking=no dist/bundle.js ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/html/dist/


          echo "📦 上传 src/"
          scp -i private_key.pem -o StrictHostKeyChecking=no -r src ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/html/



      - name: 📁 显示 EC2 上部署结果
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          echo "📁 查看远程 /var/www/html/ 结构："
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} 'ls -R /var/www/html/'

      - name: ✅ 输出访问链接
        run: |
          echo '✅ 部署完成，请访问：'
          echo '🔗 http://${{ secrets.EC2_HOST }}/index.html'
          echo '🔗 http://${{ secrets.EC2_HOST }}/src/pages/case_list.html'
          echo '🔗 http://${{ secrets.EC2_HOST }}/src/pages/ThreeDViewer.html'
        if: success()

    #   - name: 📁 查看 EC2 上的 dist 目录内容
    #     run: |
    #       echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
    #       chmod 600 private_key.pem
    #       ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
    #         echo "✅ dist 目录内容："
    #         ls -lh /var/www/html/dist
    #       '
      
      - name: ❌ 构建失败提示
        run: echo '❌ 构建失败，请检查日志'
        if: failure()
